{"version":3,"sources":["webpack:///src/views/MessageBox.vue","webpack:///./src/views/MessageBox.vue?8ab6","webpack:///./src/views/MessageBox.vue"],"names":["MessageBox","methods","open","_this","this","$alert","confirmButtonText","callback","action","console","log","$message","type","message","open2","_this2","$confirm","cancelButtonText","then","catch","open3","_this3","$prompt","inputPattern","inputErrorMessage","inputPlaceholder","roundButton","_ref","value","open4","_this4","h","$createElement","$msgbox","title","style","showCancelButton","beforeClose","instance","done","confirmButtonLoading","setTimeout","open5","dangerouslyUseHTMLString","data","customClass","showClose","lockScroll","showConfirmButton","cancelButtonClass","confirmButtonClass","closeOnClickModal","closeOnPressEscape","closeOnHashChange","showInput","inputType","inputValue","inputValidator","center","views_MessageBox","render","_vm","_h","_c","_self","attrs","on","click","_v","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/3.949665ddc3b9cf9523f8.js","sourcesContent":["<template>\r\n    <div>\r\n        <el-button type=\"text\" @click=\"open\">\r\n            Message Box\r\n        </el-button>\r\n        <el-button type=\"text\" @click=\"open2\">\r\n            删除\r\n        </el-button>\r\n        <el-button type=\"text\" @click=\"open3\">\r\n            prompt\r\n        </el-button>\r\n        <el-button type=\"text\" @click=\"open4\">\r\n            自定义弹框\r\n        </el-button>\r\n        <el-button type=\"text\" @click=\"open5\">\r\n            HTML弹框\r\n        </el-button>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    methods: {\r\n        // 消息提示弹框\r\n        open: function(){      \r\n            this.$alert('这是一段内容', '标题名称', {\r\n                confirmButtonText: '确定',\r\n                // 点击确认取消，都会触发callback回调函数\r\n                callback: action => {\r\n                    if(action === 'confirm'){\r\n                        console.log('确定')\r\n                    }else{\r\n                        console.log('取消/关闭')\r\n                    }\r\n                    // console.log(action)\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: `action: ${ action }`\r\n                    });\r\n                }\r\n            });\r\n        },\r\n\r\n        // 确认消息弹框\r\n        open2() {\r\n            this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).then(() => {\r\n                // 点了确定\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: '删除成功!'\r\n                });\r\n            }).catch(() => {\r\n                // 点了取消/关闭\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '已取消删除'\r\n                });          \r\n            });\r\n        },\r\n\r\n        // 提交内容弹框\r\n        open3() {\r\n            this.$prompt('请输入邮箱', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                inputPattern: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\r\n                inputErrorMessage: '邮箱格式不正确',\r\n                inputPlaceholder: '请输入邮箱',\r\n                roundButton: true// 是否使用圆角按钮\r\n            }).then(({ value }) => {\r\n                // 点了确定\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: `你的邮箱：${value}`\r\n                });\r\n            }).catch(() => {\r\n                // 点了取消/关闭\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: '取消输入'\r\n                });       \r\n            });\r\n        },\r\n\r\n        // 自定义弹框\r\n        open4: function(){\r\n            const h = this.$createElement;\r\n            // console.log(h)\r\n            this.$msgbox({\r\n                title: '消息',//弹框标题\r\n                message: h('p', null, [\r\n                    h('span', null, '内容可以是 '),\r\n                    h('i', { style: 'color: red' }, 'VNode')\r\n                ]),\r\n                /*\r\n                <p>\r\n                    <span>内容可以是 </span>\r\n                    <i style=\"color: red;\">VNode</i>\r\n                </p>\r\n                */\r\n                showCancelButton: true,//是否显示取消按钮\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                // 在即将关闭前执行的回调\r\n                beforeClose: (action, instance, done) => {\r\n                    // 点了确认，先loadding，再关闭弹框\r\n                    if (action === 'confirm') {\r\n                        instance.confirmButtonLoading = true;//按钮loadding效果\r\n                        instance.confirmButtonText = '执行中...';//按钮文字变化\r\n                        setTimeout(() => {\r\n                            // 先loadding 0.3s\r\n                            setTimeout(() => {\r\n                                instance.confirmButtonLoading = false;\r\n                            }, 300);\r\n                            // 关闭弹框 3s\r\n                            done();\r\n                        }, 3000);\r\n                    } else {\r\n                        // 点了取消/关闭，立即关闭弹框\r\n                        done();\r\n                    }\r\n                }\r\n            }).then(action => {\r\n                // 点了确认\r\n                this.$message({\r\n                    type: 'success',\r\n                    message: 'action: ' + action\r\n                });\r\n            }).catch(action => {\r\n                // 点了取消/关闭\r\n                this.$message({\r\n                    type: 'info',\r\n                    message: 'action: ' + action\r\n                });\r\n            });\r\n        },\r\n\r\n        // 使用HTML弹框\r\n        open5() {\r\n            this.$alert(`\r\n                <ul>\r\n                   <li>江西</li>\r\n                   <li>广东</li>\r\n                   <li>福建</li>\r\n                </ul>`, \r\n                '标题党', \r\n                {\r\n                    dangerouslyUseHTMLString: true\r\n                }\r\n            ).then(() => {\r\n                console.log('点了确定')\r\n            }).catch(() => {\r\n                console.log('点了取消')\r\n            });\r\n        }\r\n    }, \r\n    data() {\r\n        return {\r\n            // element弹框配置参数：\r\n            title: 'MessageBox 标题\tstring\t—\t—',\r\n            message: 'MessageBox 消息正文内容\tstring / VNode\t—\t—',\r\n            dangerouslyUseHTMLString: '是否将 message 属性作为 HTML 片段处理\tboolean\t—\tfalse',\r\n            type: '消息类型，用于显示图标\tstring\tsuccess / info / warning / error\t—',\r\n            customClass: 'MessageBox 的自定义类名\tstring\t—\t—',\r\n            callback: '若不使用 Promise，可以使用此参数指定 MessageBox 关闭后的回调\tfunction(action, instance)，action 的值为’confirm’或’cancel’, instance 为 MessageBox 实例，可以通过它访问实例上的属性和方法\t—\t—',\r\n            showClose: 'MessageBox 是否显示右上角关闭按钮\tboolean\t—\ttrue',\r\n            beforeClose: 'MessageBox 关闭前的回调，会暂停实例的关闭\tfunction(action, instance, done)，action 的值为’confirm’或’cancel’；instance 为 MessageBox 实例，可以通过它访问实例上的属性和方法；done 用于关闭 MessageBox 实例\t—\t—',\r\n            lockScroll: '是否在 MessageBox 出现时将 body 滚动锁定\tboolean\t—\ttrue',//是否锁屏\r\n            showCancelButton: '是否显示取消按钮\tboolean\t—\tfalse（以 confirm 和 prompt 方式调用时为 true）',\r\n            showConfirmButton: '是否显示确定按钮\tboolean\t—\ttrue',\r\n            cancelButtonText: '取消按钮的文本内容\tstring\t—\t取消',\r\n            confirmButtonText: '确定按钮的文本内容\tstring\t—\t确定',\r\n            cancelButtonClass: '取消按钮的自定义类名\tstring\t—\t—',\r\n            confirmButtonClass: '确定按钮的自定义类名\tstring\t—\t—',\r\n            closeOnClickModal: '是否可通过点击遮罩关闭 MessageBox\tboolean\t—\ttrue（以 alert 方式调用时为 false）',\r\n            closeOnPressEscape: '是否可通过按下 ESC 键关闭 MessageBox\tboolean\t—\ttrue（以 alert 方式调用时为 false）',\r\n            closeOnHashChange: '是否在 hashchange 时关闭 MessageBox\tboolean\t—\ttrue',\r\n            showInput: '是否显示输入框\tboolean\t—\tfalse（以 prompt 方式调用时为 true）',\r\n            inputPlaceholder: '输入框的占位符\tstring\t—\t—',\r\n            inputType: '输入框的类型\tstring\t—\ttext',\r\n            inputValue: '输入框的初始文本\tstring\t—\t—',\r\n            inputPattern: '输入框的校验表达式\tregexp\t—\t—',\r\n            inputValidator: '输入框的校验函数。可以返回布尔值或字符串，若返回一个字符串, 则返回结果会被赋值给 inputErrorMessage\tfunction\t—\t—',\r\n            inputErrorMessage: '校验未通过时的提示文本\tstring\t—\t输入的数据不合法!',\r\n            center: '是否居中布局\tboolean\t—\tfalse',\r\n            roundButton: '是否使用圆角按钮\tboolean\t—\tfalse'\r\n        }\r\n    },\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/MessageBox.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.open}},[_vm._v(\"\\n        Message Box\\n    \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.open2}},[_vm._v(\"\\n        删除\\n    \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.open3}},[_vm._v(\"\\n        prompt\\n    \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.open4}},[_vm._v(\"\\n        自定义弹框\\n    \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"text\"},on:{\"click\":_vm.open5}},[_vm._v(\"\\n        HTML弹框\\n    \")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler?{\"id\":\"data-v-ce5f3824\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.3@vue-loader/lib/selector.js?type=template&index=0!./src/views/MessageBox.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MessageBox.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=script&index=0!./MessageBox.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-ce5f3824\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/_vue-loader@13.7.3@vue-loader/lib/selector?type=template&index=0!./MessageBox.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/MessageBox.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}